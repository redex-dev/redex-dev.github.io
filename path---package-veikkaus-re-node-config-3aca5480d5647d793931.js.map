{"version":3,"sources":["webpack:///path---package-veikkaus-re-node-config-3aca5480d5647d793931.js","webpack:///./.cache/json/package-veikkaus-re-node-config.json"],"names":["webpackJsonp","1494","module","exports","data","package","type","id","name","version","category","flags","platforms","description","keywords","license","updated","stars","score","quality","popularity","maintenance","readme","homepageUrl","repositoryUrl","npmUrl","issuesUrl","slug","pathContext"],"mappings":"AAAAA,cAAc,iBAERC,KACA,SAAUC,EAAQC,GCHxBD,EAAAC,SAAkBC,MAAQC,SAAWC,KAAA,YAAAC,GAAA,2BAAAC,KAAA,2BAAAC,QAAA,QAAAC,SAAA,UAAAC,SAAAC,WAAA,QAAAC,YAAA,yCAAAC,UAAA,iBAAAC,QAAA,MAAAC,QAAA,2BAAAC,MAAA,EAAAC,MAAA,kBAAAC,QAAA,kBAAAC,WAAA,oBAAAC,YAAA,kBAAAC,OAAA,+xZAAghaC,YAAA,oDAAAC,cAAA,6CAAAC,OAAA,6DAAAC,UAAA,oDAAAC,KAAA,sCAAuhCC,aAAgBrB,GAAA","file":"path---package-veikkaus-re-node-config-3aca5480d5647d793931.js","sourcesContent":["webpackJsonp([253194900049220],{\n\n/***/ 1494:\n/***/ (function(module, exports) {\n\n\tmodule.exports = {\"data\":{\"package\":{\"type\":\"published\",\"id\":\"@veikkaus/re-node-config\",\"name\":\"@veikkaus/re-node-config\",\"version\":\"0.3.1\",\"category\":\"library\",\"flags\":[],\"platforms\":[\"node\"],\"description\":\"Node dependent reasonml config library\",\"keywords\":[\"configuration\"],\"license\":\"MIT\",\"updated\":\"2020-07-07T02:44:34.178Z\",\"stars\":0,\"score\":0.5887202347400533,\"quality\":0.8007532614710094,\"popularity\":0.022052286000873243,\"maintenance\":0.9736455891384138,\"readme\":\"<h1 id=\\\"renodeconfig\\\"><a href=\\\"#renodeconfig\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>ReNodeConfig</h1>\\n<p><a href=\\\"https://www.npmjs.com/package/@veikkaus/re-node-config\\\"><img src=\\\"https://img.shields.io/npm/v/@veikkaus/re-node-config.svg\\\" alt=\\\"npm version\\\"></a>\\n<a href=\\\"https://snyk.io/test/github/veikkaus/re-node-config\\\"><img src=\\\"https://snyk.io/test/github/veikkaus/re-node-config/badge.svg\\\" alt=\\\"Known Vulnerabilities\\\"></a></p>\\n<p>Config library for nodejs, similar to <a href=\\\"https://github.com/lorenwest/node-config\\\">node-config</a> but strongly typed with validated type parsing. No need for Js.Nullable.t shims typical when just binding to js-libs. Configuration data is a JSON Object loaded by a loader function (see below).</p>\\n<h1 id=\\\"install\\\"><a href=\\\"#install\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Install</h1>\\n<div class=\\\"redex-codeblock\\\"><pre class=\\\"hljs lang-none\\\"><code>npm install @veikkaus/re-node-config</code></pre></div>\\n<p>And to <code>bsconfig.json</code>: <code>\\\"bs-dependencies\\\": [..., \\\"@veikkaus/re-node-config\\\", ...],</code></p>\\n<h1 id=\\\"usage-examples\\\"><a href=\\\"#usage-examples\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage Examples</h1>\\n<p>Assuming You Write file MyConfig.re:</p>\\n\\n    <div class=\\\"redex-codeblock m-tabbed\\\">\\n      <ul>\\n        <li class=\\\"reason s-selected\\\"> RE\\n        <li class=\\\"ml\\\"> ML\\n      </ul>\\n      <div class=\\\"codeblock reason s-selected\\\">\\n        <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">module</span> <span class=\\\"hljs-title\\\">C</span> = <span class=\\\"hljs-title\\\">VeikkausReNodeConfig</span>.<span class=\\\"hljs-title\\\">Config</span>;\\n\\n/*\\n * <span class=\\\"hljs-title\\\">loadConfig</span> <span class=\\\"hljs-title\\\">with</span> <span class=\\\"hljs-title\\\">default</span> <span class=\\\"hljs-title\\\">options</span> <span class=\\\"hljs-title\\\">searches</span> <span class=\\\"hljs-title\\\">for</span> .<span class=\\\"hljs-title\\\">json</span> <span class=\\\"hljs-title\\\">and</span> .<span class=\\\"hljs-title\\\">yaml</span> <span class=\\\"hljs-title\\\">files</span> <span class=\\\"hljs-title\\\">from</span> ./<span class=\\\"hljs-title\\\">config</span>/\\n * (<span class=\\\"hljs-title\\\">loading</span> <span class=\\\"hljs-title\\\">may</span> <span class=\\\"hljs-title\\\">produce</span> <span class=\\\"hljs-title\\\">an</span> <span class=\\\"hljs-title\\\">error</span>, <span class=\\\"hljs-title\\\">therefore</span> <span class=\\\"hljs-title\\\">using</span> <span class=\\\"hljs-title\\\">getExn</span>, <span class=\\\"hljs-title\\\">which</span> <span class=\\\"hljs-title\\\">will</span> <span class=\\\"hljs-title\\\">throw</span> <span class=\\\"hljs-title\\\">if</span> <span class=\\\"hljs-title\\\">loading</span> <span class=\\\"hljs-title\\\">had</span> <span class=\\\"hljs-title\\\">errors</span>)\\n */\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">config</span>: <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">t</span> = <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">loadConfig</span>() |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;</span></code></pre>\\n      </div>\\n      <div class=\\\"codeblock ml\\\">\\n        <pre class=\\\"hljs lang-ml\\\"><code><span class=\\\"hljs-keyword\\\">module</span> <span class=\\\"hljs-type\\\">C</span> = <span class=\\\"hljs-type\\\">VeikkausReNodeConfig</span>.<span class=\\\"hljs-type\\\">Config</span>\\n<span class=\\\"hljs-keyword\\\">let</span> config: <span class=\\\"hljs-type\\\">C</span>.t = (<span class=\\\"hljs-type\\\">C</span>.loadConfig <span class=\\\"hljs-literal\\\">()</span>) |&gt; <span class=\\\"hljs-type\\\">C</span>.getExn</code></pre>\\n      </div>\\n    </div>\\n  \\n<p>Usage in other files/modules:</p>\\n\\n    <div class=\\\"redex-codeblock m-tabbed\\\">\\n      <ul>\\n        <li class=\\\"reason s-selected\\\"> RE\\n        <li class=\\\"ml\\\"> ML\\n      </ul>\\n      <div class=\\\"codeblock reason s-selected\\\">\\n        <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">module</span> <span class=\\\"hljs-title\\\">C</span> = <span class=\\\"hljs-title\\\">VeikkausReNodeConfig</span>.<span class=\\\"hljs-title\\\">Config</span>;\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">config</span> = <span class=\\\"hljs-title\\\">MyConfig</span>.<span class=\\\"hljs-title\\\">config</span>;\\n\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">host</span>: <span class=\\\"hljs-title\\\">string</span> = <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getString</span>(\\\"<span class=\\\"hljs-title\\\">server</span>.<span class=\\\"hljs-title\\\">host</span>\\\", <span class=\\\"hljs-title\\\">config</span>);\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">port</span>: <span class=\\\"hljs-title\\\">int</span> = <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getInt</span>(\\\"<span class=\\\"hljs-title\\\">server</span>.<span class=\\\"hljs-title\\\">port</span>\\\", <span class=\\\"hljs-title\\\">config</span>);\\n\\n/* <span class=\\\"hljs-title\\\">getString</span> <span class=\\\"hljs-title\\\">is</span> <span class=\\\"hljs-title\\\">actually</span> <span class=\\\"hljs-title\\\">a</span> <span class=\\\"hljs-title\\\">convenience</span> <span class=\\\"hljs-title\\\">function</span> <span class=\\\"hljs-title\\\">which</span> <span class=\\\"hljs-title\\\">combines</span> <span class=\\\"hljs-title\\\">the</span> <span class=\\\"hljs-title\\\">following</span> <span class=\\\"hljs-title\\\">detailed</span> <span class=\\\"hljs-title\\\">functionality</span>:\\n *   <span class=\\\"hljs-title\\\">getString</span> = (<span class=\\\"hljs-title\\\">path</span>, <span class=\\\"hljs-title\\\">config</span>) =&gt; <span class=\\\"hljs-title\\\">config</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">key</span>(\\\"<span class=\\\"hljs-title\\\">server</span>.<span class=\\\"hljs-title\\\">host</span>\\\") |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseString</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;\\n *   <span class=\\\"hljs-title\\\">meaning</span> ~ <span class=\\\"hljs-title\\\">get</span> <span class=\\\"hljs-title\\\">a</span> <span class=\\\"hljs-title\\\">string</span> <span class=\\\"hljs-title\\\">value</span> <span class=\\\"hljs-title\\\">from</span> <span class=\\\"hljs-title\\\">the</span> <span class=\\\"hljs-title\\\">defined</span> <span class=\\\"hljs-title\\\">configuration</span> <span class=\\\"hljs-title\\\">path</span> <span class=\\\"hljs-title\\\">or</span> <span class=\\\"hljs-title\\\">throw</span> <span class=\\\"hljs-title\\\">exception</span> <span class=\\\"hljs-title\\\">MissingKey</span> <span class=\\\"hljs-title\\\">or</span>\\n *             <span class=\\\"hljs-title\\\">TypeMismatch</span>\\n */\\n\\n/* <span class=\\\"hljs-title\\\">Parsing</span> <span class=\\\"hljs-title\\\">lists</span> <span class=\\\"hljs-title\\\">of</span> <span class=\\\"hljs-title\\\">values</span> <span class=\\\"hljs-title\\\">is</span> <span class=\\\"hljs-title\\\">fairly</span> <span class=\\\"hljs-title\\\">simple</span> <span class=\\\"hljs-title\\\">too</span>: */\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">myList</span>: <span class=\\\"hljs-title\\\">list</span>(<span class=\\\"hljs-title\\\">string</span>) = <span class=\\\"hljs-title\\\">config</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">key</span>(\\\"<span class=\\\"hljs-title\\\">listOfWords</span>\\\") |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseList</span>(<span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseString</span>) |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;\\n\\n\\n/* <span class=\\\"hljs-title\\\">Finally</span> <span class=\\\"hljs-title\\\">providing</span> <span class=\\\"hljs-title\\\">that</span> <span class=\\\"hljs-title\\\">you</span> <span class=\\\"hljs-title\\\">implement</span> <span class=\\\"hljs-title\\\">a</span> <span class=\\\"hljs-title\\\">parser</span> <span class=\\\"hljs-title\\\">from</span> <span class=\\\"hljs-title\\\">json</span> <span class=\\\"hljs-title\\\">to</span> <span class=\\\"hljs-title\\\">your</span> <span class=\\\"hljs-title\\\">own</span> <span class=\\\"hljs-title\\\">type</span>: */\\n<span class=\\\"hljs-title\\\">type</span> <span class=\\\"hljs-title\\\">foo</span>;\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">myJsonToFoo</span>: <span class=\\\"hljs-title\\\">Js</span>.<span class=\\\"hljs-title\\\">Json</span>.<span class=\\\"hljs-title\\\">t</span> =&gt; <span class=\\\"hljs-title\\\">foo</span>;     /* <span class=\\\"hljs-title\\\">May</span> <span class=\\\"hljs-title\\\">throw</span> <span class=\\\"hljs-title\\\">on</span> <span class=\\\"hljs-title\\\">parsing</span> <span class=\\\"hljs-title\\\">errors</span> */\\n/* <span class=\\\"hljs-title\\\">then</span> <span class=\\\"hljs-title\\\">that</span> <span class=\\\"hljs-title\\\">can</span> <span class=\\\"hljs-title\\\">be</span> <span class=\\\"hljs-title\\\">used</span> <span class=\\\"hljs-title\\\">to</span> <span class=\\\"hljs-title\\\">turn</span> <span class=\\\"hljs-title\\\">complicated</span> <span class=\\\"hljs-title\\\">object</span> <span class=\\\"hljs-title\\\">on</span> <span class=\\\"hljs-title\\\">your</span> <span class=\\\"hljs-title\\\">config</span> <span class=\\\"hljs-title\\\">into</span> <span class=\\\"hljs-title\\\">your</span> <span class=\\\"hljs-title\\\">custom</span> <span class=\\\"hljs-title\\\">type</span>: */\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">myFoo</span>: <span class=\\\"hljs-title\\\">foo</span> = <span class=\\\"hljs-title\\\">config</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">key</span>(\\\"<span class=\\\"hljs-title\\\">foo</span>\\\") |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseCustom</span>(<span class=\\\"hljs-title\\\">myJsonToFoo</span>) |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;</span></code></pre>\\n      </div>\\n      <div class=\\\"codeblock ml\\\">\\n        <pre class=\\\"hljs lang-ml\\\"><code><span class=\\\"hljs-number\\\">958</span>: &lt;<span class=\\\"hljs-type\\\">UNKNOWN</span> <span class=\\\"hljs-type\\\">SYNTAX</span> <span class=\\\"hljs-type\\\">ERROR</span>&gt;</code></pre>\\n      </div>\\n    </div>\\n  \\n<h1 id=\\\"config-loading\\\"><a href=\\\"#config-loading\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Config loading</h1>\\n<p>Function <code>C.loadConfig()</code> searches config values from following sources in following order:\\n1. Loads config files from directory defined by <code>NODE_CONFIG_DIR</code> env variable if it exists, or otherwise from directory <code>process.cwd() + \\\"/config/\\\"</code>:\\n1. File <code>default.{json,yaml}</code> is loaded if it exists\\n2. File <code>${NODE_CONFIG_ENV}.{json,yaml}</code> is loaded if it exists, and if not, then and only then <code>${NODE_ENV}.{json,yaml}</code> is loaded if that exists.\\n3. File <code>local.{json,yaml}</code> is loaded if exists.\\n2. Loads Environment Variables\\n1. Loads <code>CONFIG_JSON</code> contents\\n2. Reads file <code>custom-environment-variables.{json,yaml}</code>, which contains ENV variable name override definitions for various config keys (this is identical to: <a href=\\\"https://github.com/lorenwest/node-config/wiki/Environment-Variables#custom-environment-variables\\\">node-config</a>), -> loads overrides from the defined env variables that are found.\\nJSON parsing is attempted to the values of the env variables, enabling e.g. passing lists inside one env variable: <code>MYVAR='[\\\"first\\\",\\\"second\\\"]'</code>. If the attempted JSON parsing fails, the value is treated as a simple string e.g. <code>MYVAR2=\\\"value2\\\"</code> (= simple string. note that json would need extra quotations: <code>\\\"\\\\\\\"value2\\\\\\\"\\\"</code>)\\n3. Fallback to empty config if nothing from the above exists.</p>\\n\",\"homepageUrl\":\"https://github.com/veikkaus/re-node-config#readme\",\"repositoryUrl\":\"https://github.com/veikkaus/re-node-config\",\"npmUrl\":\"https://www.npmjs.com/package/%40veikkaus%2Fre-node-config\",\"issuesUrl\":\"https://github.com/veikkaus/re-node-config/issues\",\"slug\":\"/package/@veikkaus/re-node-config\"}},\"pathContext\":{\"id\":\"@veikkaus/re-node-config\"}}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// path---package-veikkaus-re-node-config-3aca5480d5647d793931.js","module.exports = {\"data\":{\"package\":{\"type\":\"published\",\"id\":\"@veikkaus/re-node-config\",\"name\":\"@veikkaus/re-node-config\",\"version\":\"0.3.1\",\"category\":\"library\",\"flags\":[],\"platforms\":[\"node\"],\"description\":\"Node dependent reasonml config library\",\"keywords\":[\"configuration\"],\"license\":\"MIT\",\"updated\":\"2020-07-07T02:44:34.178Z\",\"stars\":0,\"score\":0.5887202347400533,\"quality\":0.8007532614710094,\"popularity\":0.022052286000873243,\"maintenance\":0.9736455891384138,\"readme\":\"<h1 id=\\\"renodeconfig\\\"><a href=\\\"#renodeconfig\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>ReNodeConfig</h1>\\n<p><a href=\\\"https://www.npmjs.com/package/@veikkaus/re-node-config\\\"><img src=\\\"https://img.shields.io/npm/v/@veikkaus/re-node-config.svg\\\" alt=\\\"npm version\\\"></a>\\n<a href=\\\"https://snyk.io/test/github/veikkaus/re-node-config\\\"><img src=\\\"https://snyk.io/test/github/veikkaus/re-node-config/badge.svg\\\" alt=\\\"Known Vulnerabilities\\\"></a></p>\\n<p>Config library for nodejs, similar to <a href=\\\"https://github.com/lorenwest/node-config\\\">node-config</a> but strongly typed with validated type parsing. No need for Js.Nullable.t shims typical when just binding to js-libs. Configuration data is a JSON Object loaded by a loader function (see below).</p>\\n<h1 id=\\\"install\\\"><a href=\\\"#install\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Install</h1>\\n<div class=\\\"redex-codeblock\\\"><pre class=\\\"hljs lang-none\\\"><code>npm install @veikkaus/re-node-config</code></pre></div>\\n<p>And to <code>bsconfig.json</code>: <code>\\\"bs-dependencies\\\": [..., \\\"@veikkaus/re-node-config\\\", ...],</code></p>\\n<h1 id=\\\"usage-examples\\\"><a href=\\\"#usage-examples\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Usage Examples</h1>\\n<p>Assuming You Write file MyConfig.re:</p>\\n\\n    <div class=\\\"redex-codeblock m-tabbed\\\">\\n      <ul>\\n        <li class=\\\"reason s-selected\\\"> RE\\n        <li class=\\\"ml\\\"> ML\\n      </ul>\\n      <div class=\\\"codeblock reason s-selected\\\">\\n        <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">module</span> <span class=\\\"hljs-title\\\">C</span> = <span class=\\\"hljs-title\\\">VeikkausReNodeConfig</span>.<span class=\\\"hljs-title\\\">Config</span>;\\n\\n/*\\n * <span class=\\\"hljs-title\\\">loadConfig</span> <span class=\\\"hljs-title\\\">with</span> <span class=\\\"hljs-title\\\">default</span> <span class=\\\"hljs-title\\\">options</span> <span class=\\\"hljs-title\\\">searches</span> <span class=\\\"hljs-title\\\">for</span> .<span class=\\\"hljs-title\\\">json</span> <span class=\\\"hljs-title\\\">and</span> .<span class=\\\"hljs-title\\\">yaml</span> <span class=\\\"hljs-title\\\">files</span> <span class=\\\"hljs-title\\\">from</span> ./<span class=\\\"hljs-title\\\">config</span>/\\n * (<span class=\\\"hljs-title\\\">loading</span> <span class=\\\"hljs-title\\\">may</span> <span class=\\\"hljs-title\\\">produce</span> <span class=\\\"hljs-title\\\">an</span> <span class=\\\"hljs-title\\\">error</span>, <span class=\\\"hljs-title\\\">therefore</span> <span class=\\\"hljs-title\\\">using</span> <span class=\\\"hljs-title\\\">getExn</span>, <span class=\\\"hljs-title\\\">which</span> <span class=\\\"hljs-title\\\">will</span> <span class=\\\"hljs-title\\\">throw</span> <span class=\\\"hljs-title\\\">if</span> <span class=\\\"hljs-title\\\">loading</span> <span class=\\\"hljs-title\\\">had</span> <span class=\\\"hljs-title\\\">errors</span>)\\n */\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">config</span>: <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">t</span> = <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">loadConfig</span>() |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;</span></code></pre>\\n      </div>\\n      <div class=\\\"codeblock ml\\\">\\n        <pre class=\\\"hljs lang-ml\\\"><code><span class=\\\"hljs-keyword\\\">module</span> <span class=\\\"hljs-type\\\">C</span> = <span class=\\\"hljs-type\\\">VeikkausReNodeConfig</span>.<span class=\\\"hljs-type\\\">Config</span>\\n<span class=\\\"hljs-keyword\\\">let</span> config: <span class=\\\"hljs-type\\\">C</span>.t = (<span class=\\\"hljs-type\\\">C</span>.loadConfig <span class=\\\"hljs-literal\\\">()</span>) |&gt; <span class=\\\"hljs-type\\\">C</span>.getExn</code></pre>\\n      </div>\\n    </div>\\n  \\n<p>Usage in other files/modules:</p>\\n\\n    <div class=\\\"redex-codeblock m-tabbed\\\">\\n      <ul>\\n        <li class=\\\"reason s-selected\\\"> RE\\n        <li class=\\\"ml\\\"> ML\\n      </ul>\\n      <div class=\\\"codeblock reason s-selected\\\">\\n        <pre class=\\\"hljs lang-reason\\\"><code><span class=\\\"hljs-class\\\"><span class=\\\"hljs-keyword\\\">module</span> <span class=\\\"hljs-title\\\">C</span> = <span class=\\\"hljs-title\\\">VeikkausReNodeConfig</span>.<span class=\\\"hljs-title\\\">Config</span>;\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">config</span> = <span class=\\\"hljs-title\\\">MyConfig</span>.<span class=\\\"hljs-title\\\">config</span>;\\n\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">host</span>: <span class=\\\"hljs-title\\\">string</span> = <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getString</span>(\\\"<span class=\\\"hljs-title\\\">server</span>.<span class=\\\"hljs-title\\\">host</span>\\\", <span class=\\\"hljs-title\\\">config</span>);\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">port</span>: <span class=\\\"hljs-title\\\">int</span> = <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getInt</span>(\\\"<span class=\\\"hljs-title\\\">server</span>.<span class=\\\"hljs-title\\\">port</span>\\\", <span class=\\\"hljs-title\\\">config</span>);\\n\\n/* <span class=\\\"hljs-title\\\">getString</span> <span class=\\\"hljs-title\\\">is</span> <span class=\\\"hljs-title\\\">actually</span> <span class=\\\"hljs-title\\\">a</span> <span class=\\\"hljs-title\\\">convenience</span> <span class=\\\"hljs-title\\\">function</span> <span class=\\\"hljs-title\\\">which</span> <span class=\\\"hljs-title\\\">combines</span> <span class=\\\"hljs-title\\\">the</span> <span class=\\\"hljs-title\\\">following</span> <span class=\\\"hljs-title\\\">detailed</span> <span class=\\\"hljs-title\\\">functionality</span>:\\n *   <span class=\\\"hljs-title\\\">getString</span> = (<span class=\\\"hljs-title\\\">path</span>, <span class=\\\"hljs-title\\\">config</span>) =&gt; <span class=\\\"hljs-title\\\">config</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">key</span>(\\\"<span class=\\\"hljs-title\\\">server</span>.<span class=\\\"hljs-title\\\">host</span>\\\") |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseString</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;\\n *   <span class=\\\"hljs-title\\\">meaning</span> ~ <span class=\\\"hljs-title\\\">get</span> <span class=\\\"hljs-title\\\">a</span> <span class=\\\"hljs-title\\\">string</span> <span class=\\\"hljs-title\\\">value</span> <span class=\\\"hljs-title\\\">from</span> <span class=\\\"hljs-title\\\">the</span> <span class=\\\"hljs-title\\\">defined</span> <span class=\\\"hljs-title\\\">configuration</span> <span class=\\\"hljs-title\\\">path</span> <span class=\\\"hljs-title\\\">or</span> <span class=\\\"hljs-title\\\">throw</span> <span class=\\\"hljs-title\\\">exception</span> <span class=\\\"hljs-title\\\">MissingKey</span> <span class=\\\"hljs-title\\\">or</span>\\n *             <span class=\\\"hljs-title\\\">TypeMismatch</span>\\n */\\n\\n/* <span class=\\\"hljs-title\\\">Parsing</span> <span class=\\\"hljs-title\\\">lists</span> <span class=\\\"hljs-title\\\">of</span> <span class=\\\"hljs-title\\\">values</span> <span class=\\\"hljs-title\\\">is</span> <span class=\\\"hljs-title\\\">fairly</span> <span class=\\\"hljs-title\\\">simple</span> <span class=\\\"hljs-title\\\">too</span>: */\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">myList</span>: <span class=\\\"hljs-title\\\">list</span>(<span class=\\\"hljs-title\\\">string</span>) = <span class=\\\"hljs-title\\\">config</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">key</span>(\\\"<span class=\\\"hljs-title\\\">listOfWords</span>\\\") |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseList</span>(<span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseString</span>) |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;\\n\\n\\n/* <span class=\\\"hljs-title\\\">Finally</span> <span class=\\\"hljs-title\\\">providing</span> <span class=\\\"hljs-title\\\">that</span> <span class=\\\"hljs-title\\\">you</span> <span class=\\\"hljs-title\\\">implement</span> <span class=\\\"hljs-title\\\">a</span> <span class=\\\"hljs-title\\\">parser</span> <span class=\\\"hljs-title\\\">from</span> <span class=\\\"hljs-title\\\">json</span> <span class=\\\"hljs-title\\\">to</span> <span class=\\\"hljs-title\\\">your</span> <span class=\\\"hljs-title\\\">own</span> <span class=\\\"hljs-title\\\">type</span>: */\\n<span class=\\\"hljs-title\\\">type</span> <span class=\\\"hljs-title\\\">foo</span>;\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">myJsonToFoo</span>: <span class=\\\"hljs-title\\\">Js</span>.<span class=\\\"hljs-title\\\">Json</span>.<span class=\\\"hljs-title\\\">t</span> =&gt; <span class=\\\"hljs-title\\\">foo</span>;     /* <span class=\\\"hljs-title\\\">May</span> <span class=\\\"hljs-title\\\">throw</span> <span class=\\\"hljs-title\\\">on</span> <span class=\\\"hljs-title\\\">parsing</span> <span class=\\\"hljs-title\\\">errors</span> */\\n/* <span class=\\\"hljs-title\\\">then</span> <span class=\\\"hljs-title\\\">that</span> <span class=\\\"hljs-title\\\">can</span> <span class=\\\"hljs-title\\\">be</span> <span class=\\\"hljs-title\\\">used</span> <span class=\\\"hljs-title\\\">to</span> <span class=\\\"hljs-title\\\">turn</span> <span class=\\\"hljs-title\\\">complicated</span> <span class=\\\"hljs-title\\\">object</span> <span class=\\\"hljs-title\\\">on</span> <span class=\\\"hljs-title\\\">your</span> <span class=\\\"hljs-title\\\">config</span> <span class=\\\"hljs-title\\\">into</span> <span class=\\\"hljs-title\\\">your</span> <span class=\\\"hljs-title\\\">custom</span> <span class=\\\"hljs-title\\\">type</span>: */\\n<span class=\\\"hljs-title\\\">let</span> <span class=\\\"hljs-title\\\">myFoo</span>: <span class=\\\"hljs-title\\\">foo</span> = <span class=\\\"hljs-title\\\">config</span> |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">key</span>(\\\"<span class=\\\"hljs-title\\\">foo</span>\\\") |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">parseCustom</span>(<span class=\\\"hljs-title\\\">myJsonToFoo</span>) |&gt; <span class=\\\"hljs-title\\\">C</span>.<span class=\\\"hljs-title\\\">getExn</span>;</span></code></pre>\\n      </div>\\n      <div class=\\\"codeblock ml\\\">\\n        <pre class=\\\"hljs lang-ml\\\"><code><span class=\\\"hljs-number\\\">958</span>: &lt;<span class=\\\"hljs-type\\\">UNKNOWN</span> <span class=\\\"hljs-type\\\">SYNTAX</span> <span class=\\\"hljs-type\\\">ERROR</span>&gt;</code></pre>\\n      </div>\\n    </div>\\n  \\n<h1 id=\\\"config-loading\\\"><a href=\\\"#config-loading\\\" aria-hidden=\\\"true\\\" class=\\\"anchor\\\"><svg aria-hidden=\\\"true\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg></a>Config loading</h1>\\n<p>Function <code>C.loadConfig()</code> searches config values from following sources in following order:\\n1. Loads config files from directory defined by <code>NODE_CONFIG_DIR</code> env variable if it exists, or otherwise from directory <code>process.cwd() + \\\"/config/\\\"</code>:\\n1. File <code>default.{json,yaml}</code> is loaded if it exists\\n2. File <code>${NODE_CONFIG_ENV}.{json,yaml}</code> is loaded if it exists, and if not, then and only then <code>${NODE_ENV}.{json,yaml}</code> is loaded if that exists.\\n3. File <code>local.{json,yaml}</code> is loaded if exists.\\n2. Loads Environment Variables\\n1. Loads <code>CONFIG_JSON</code> contents\\n2. Reads file <code>custom-environment-variables.{json,yaml}</code>, which contains ENV variable name override definitions for various config keys (this is identical to: <a href=\\\"https://github.com/lorenwest/node-config/wiki/Environment-Variables#custom-environment-variables\\\">node-config</a>), -> loads overrides from the defined env variables that are found.\\nJSON parsing is attempted to the values of the env variables, enabling e.g. passing lists inside one env variable: <code>MYVAR='[\\\"first\\\",\\\"second\\\"]'</code>. If the attempted JSON parsing fails, the value is treated as a simple string e.g. <code>MYVAR2=\\\"value2\\\"</code> (= simple string. note that json would need extra quotations: <code>\\\"\\\\\\\"value2\\\\\\\"\\\"</code>)\\n3. Fallback to empty config if nothing from the above exists.</p>\\n\",\"homepageUrl\":\"https://github.com/veikkaus/re-node-config#readme\",\"repositoryUrl\":\"https://github.com/veikkaus/re-node-config\",\"npmUrl\":\"https://www.npmjs.com/package/%40veikkaus%2Fre-node-config\",\"issuesUrl\":\"https://github.com/veikkaus/re-node-config/issues\",\"slug\":\"/package/@veikkaus/re-node-config\"}},\"pathContext\":{\"id\":\"@veikkaus/re-node-config\"}}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/json-loader!./.cache/json/package-veikkaus-re-node-config.json\n// module id = 1494\n// module chunks = 253194900049220"],"sourceRoot":""}