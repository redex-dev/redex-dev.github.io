webpackJsonp([40745882597842],{1108:function(e,s){e.exports={data:{packages:{edges:[{node:{type:"published",id:"@ambientlight/bs-rx",name:"@ambientlight/bs-rx",version:"0.2.1",category:"binding",flags:[],platforms:["browser"],description:"bucklescript bindings for RxJs v7",keywords:["async","utilities","reactive programming"],license:"MIT",updated:"2020-02-17T20:14:53.472Z",stars:7,score:.5895923637418563,quality:.723745821765607,popularity:.06419604917764075,maintenance:1,slug:"/package/@ambientlight/bs-rx"}},{node:{type:"published",id:"@rejs/re-future",name:"@rejs/re-future",version:"0.2.2",category:"library",flags:[],platforms:["browser","node"],description:"Future and ResultFuture library for ReasonML",keywords:["async"],license:"MIT",updated:"2020-02-02T23:10:05.420Z",stars:0,score:.5003981293423629,quality:.8782251567344962,popularity:.013579586291086066,maintenance:.6633649346289541,slug:"/package/@rejs/re-future"}},{node:{type:"published",id:"@wokalski/vow",name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",keywords:["async"],license:"MIT",updated:"2020-02-09T05:51:30.981Z",stars:null,score:.03218722062214521,quality:.10386541928927466,popularity:.0029359852438937727,maintenance:0,slug:"/package/@wokalski/vow"}},{node:{type:"published",id:"bs-effects",name:"bs-effects",version:"0.10.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",keywords:["async","utilities"],license:"BSD-3-Clause",updated:"2020-02-10T02:12:44.143Z",stars:35,score:.403139820137825,quality:.612602882747356,popularity:.06862791220541958,maintenance:.5581119601192039,slug:"/package/bs-effects"}},{node:{type:"published",id:"bs-fluture",name:"bs-fluture",version:"0.5.0",category:"binding",flags:[],platforms:["browser","node"],description:"Reason bindings for Fluture.js",keywords:["async"],license:"MIT",updated:"2020-01-31T08:42:55.955Z",stars:9,score:.5035451410007896,quality:.7595302195178846,popularity:.04405042285280496,maintenance:.7436240775626932,slug:"/package/bs-fluture"}},{node:{type:"published",id:"bs-promise-monad",name:"bs-promise-monad",version:"0.4.0",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",keywords:["async","utilities"],license:"MIT",updated:"2020-02-05T13:16:56.057Z",stars:32,score:.4367978954432622,quality:.42987243890895976,popularity:.05911745194066043,maintenance:.8204144445466948,slug:"/package/bs-promise-monad"}},{node:{type:"published",id:"bs-sentia-promise",name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",keywords:["async"],license:"MIT",updated:"2020-01-14T05:47:47.597Z",stars:null,score:.2218598248662344,quality:.7130766051534685,popularity:.02267669520055388,maintenance:0,slug:"/package/bs-sentia-promise"}},{node:{type:"published",id:"re-sync",name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",keywords:["async"],license:"MIT",updated:"2020-01-14T09:30:04.044Z",stars:16,score:.27580837330234304,quality:.6147023782222587,popularity:.06022379129793936,maintenance:.2009123796611047,slug:"/package/re-sync"}},{node:{type:"published",id:"reason-future",name:"reason-future",version:"2.5.0",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",keywords:["async"],license:"MIT",updated:"2020-01-28T01:51:57.329Z",stars:185,score:.6955325230672424,quality:.9697451284671775,popularity:.1561373463943559,maintenance:.9998883236830417,slug:"/package/reason-future"}},{node:{type:"published",id:"reason-nact",name:"reason-nact",version:"5.0.0",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",keywords:["async"],license:"Apache-2.0",updated:"2020-02-02T16:26:52.233Z",stars:111,score:.6652454243229806,quality:.9602406173781659,popularity:.07778235432007356,maintenance:.9998554717071577,slug:"/package/reason-nact"}},{node:{type:"published",id:"reason-promise",name:"reason-promise",version:"1.0.2",category:"binding",flags:[],platforms:["browser","node","native"],description:"Light and type-safe binding to JS promises",keywords:["async"],license:"MIT",updated:"2020-02-14T08:33:08.174Z",stars:243,score:.6831431073245908,quality:.9665463742197147,popularity:.12341871808698221,maintenance:.9999504106520932,slug:"/package/reason-promise"}},{node:{type:"published",id:"reason_async",name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",keywords:["async","ppx"],license:"ISC",updated:"2020-02-01T21:15:45.444Z",stars:null,score:.19154767917767568,quality:.6321196594488478,popularity:.005462232408632384,maintenance:0,slug:"/package/reason_async"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-c33c0d538792a900822c.js.map