webpackJsonp([40745882597842],{1109:function(e,s){e.exports={data:{packages:{edges:[{node:{type:"published",id:"@ambientlight/bs-rx",name:"@ambientlight/bs-rx",version:"0.2.1",category:"binding",flags:[],platforms:["browser"],description:"bucklescript bindings for RxJs v7",keywords:["async","utilities","reactive programming"],license:"MIT",updated:"2020-02-17T20:14:53.472Z",stars:7,score:.5895308780618318,quality:.7237662719056384,popularity:.06400284711468683,maintenance:1,slug:"/package/@ambientlight/bs-rx"}},{node:{type:"published",id:"@rejs/re-future",name:"@rejs/re-future",version:"0.2.2",category:"library",flags:[],platforms:["browser","node"],description:"Future and ResultFuture library for ReasonML",keywords:["async"],license:"MIT",updated:"2020-02-02T23:10:05.420Z",stars:0,score:.500400154975763,quality:.8782332311950501,popularity:.013568691499336831,maintenance:.6633746959785145,slug:"/package/@rejs/re-future"}},{node:{type:"published",id:"@wokalski/vow",name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",keywords:["async"],license:"MIT",updated:"2020-02-09T05:51:30.981Z",stars:null,score:.03216136060059258,quality:.10387053361187437,popularity:.0028577157629436317,maintenance:0,slug:"/package/@wokalski/vow"}},{node:{type:"published",id:"bs-effects",name:"bs-effects",version:"0.10.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",keywords:["async","utilities"],license:"BSD-3-Clause",updated:"2020-02-10T02:12:44.143Z",stars:35,score:.4033224442012947,quality:.6126174017845638,popularity:.06856472461393558,maintenance:.5586844858601374,slug:"/package/bs-effects"}},{node:{type:"published",id:"bs-fluture",name:"bs-fluture",version:"0.5.0",category:"binding",flags:[],platforms:["browser","node"],description:"Reason bindings for Fluture.js",keywords:["async"],license:"MIT",updated:"2020-01-31T08:42:55.955Z",stars:9,score:.5039989631749209,quality:.759541858299444,popularity:.043788624922185736,maintenance:.7451725341780646,slug:"/package/bs-fluture"}},{node:{type:"published",id:"bs-promise-monad",name:"bs-promise-monad",version:"0.4.0",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",keywords:["async","utilities"],license:"MIT",updated:"2020-02-05T13:16:56.057Z",stars:32,score:.43709978404525707,quality:.4298795744903705,popularity:.05888703081321911,maintenance:.8215012883243407,slug:"/package/bs-promise-monad"}},{node:{type:"published",id:"bs-sentia-promise",name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",keywords:["async"],license:"MIT",updated:"2020-01-14T05:47:47.597Z",stars:null,score:.22184875579565333,quality:.7130973730051176,popularity:.02262726826890878,maintenance:0,slug:"/package/bs-sentia-promise"}},{node:{type:"published",id:"re-sync",name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",keywords:["async"],license:"MIT",updated:"2020-01-14T09:30:04.044Z",stars:16,score:.2758370300031382,quality:.6147194561654733,popularity:.06002108706334014,maintenance:.20118232194664895,slug:"/package/re-sync"}},{node:{type:"published",id:"reason-future",name:"reason-future",version:"2.5.0",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",keywords:["async"],license:"MIT",updated:"2020-02-22T01:59:36.805Z",stars:186,score:.69570446685954,quality:.9697475649475925,popularity:.15662560377815227,maintenance:.9998892458654542,slug:"/package/reason-future"}},{node:{type:"published",id:"reason-nact",name:"reason-nact",version:"5.0.0",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",keywords:["async"],license:"Apache-2.0",updated:"2020-02-02T16:26:52.233Z",stars:111,score:.6651540351261994,quality:.9602447169650737,popularity:.0775167676205964,maintenance:.9998564324841961,slug:"/package/reason-nact"}},{node:{type:"published",id:"reason-promise",name:"reason-promise",version:"1.0.2",category:"binding",flags:[],platforms:["browser","node","native"],description:"Light and type-safe binding to JS promises",keywords:["async"],license:"MIT",updated:"2020-02-14T08:33:08.174Z",stars:243,score:.6830688073801716,quality:.9665510674469755,popularity:.12320223089822652,maintenance:.9999505895191421,slug:"/package/reason-promise"}},{node:{type:"published",id:"reason_async",name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",keywords:["async","ppx"],license:"ISC",updated:"2020-02-01T21:15:45.444Z",stars:null,score:.19149367380669974,quality:.6321655085134129,popularity:.005268632150502527,maintenance:0,slug:"/package/reason_async"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-1603729e6855404a42d5.js.map