webpackJsonp([40745882597842],{1038:function(e,s){e.exports={data:{packages:{edges:[{node:{type:"published",id:"@aantron/repromise",name:"@aantron/repromise",version:"0.6.0",category:"binding",flags:[],platforms:["browser","node","native"],description:"Type-safe JS promises for ReasonML",keywords:["async"],license:"MIT",updated:"2018-10-25T09:24:19.664Z",stars:169,score:.6089745198806567,quality:.7520682437068117,popularity:.09613870556369714,maintenance:.9991585709180546,slug:"/package/@aantron/repromise"}},{node:{type:"published",id:"@wokalski/vow",name:"@wokalski/vow",version:"0.0.3",category:"library",flags:[],platforms:["browser","node"],description:"Almost sound Promises for Bucklescript",keywords:["async"],license:"MIT",updated:"2018-10-15T03:26:59.978Z",stars:null,score:.10568251913679494,quality:.10315793021701584,popularity:.0030396601755143518,maintenance:.21048931145788616,slug:"/package/@wokalski/vow"}},{node:{type:"published",id:"bs-effects",name:"bs-effects",version:"0.10.0",category:"library",flags:["neglected"],platforms:["any"],description:"Bucklescript data structures for effectful sync and async programming",keywords:["async","utilities"],license:"BSD-3-Clause",updated:"2018-10-15T05:57:40.163Z",stars:24,score:.5555780563668242,quality:.6192010647165165,popularity:.06814537938825826,maintenance:.9884767261885112,slug:"/package/bs-effects"}},{node:{type:"published",id:"bs-fluture",name:"bs-fluture",version:"0.0.4",category:"binding",flags:[],platforms:["browser","node"],description:"Reason bindings for Fluture.js",keywords:["async"],license:"MIT",updated:"2018-12-03T12:11:33.741Z",stars:0,score:.4778511430867391,quality:.4104288641759499,popularity:.017853961327652663,maintenance:.9956388496265021,slug:"/package/bs-fluture"}},{node:{type:"published",id:"bs-sentia-promise",name:"bs-sentia-promise",version:"0.3.0",category:"library",flags:["neglected"],platforms:["browser","node"],description:"promise library for Ocaml/Reason based on javascript promises.",keywords:["async"],license:"MIT",updated:"2018-10-21T16:47:59.688Z",stars:null,score:.22179449284786684,quality:.709972932784807,popularity:.025150322892642157,maintenance:0,slug:"/package/bs-sentia-promise"}},{node:{type:"published",id:"re-sync",name:"re-sync",version:"0.4.2",category:"library",flags:["neglected","deprecated"],platforms:["browser","node"],description:"Async support library for Reason/Bucklescript",keywords:["async"],license:"MIT",updated:"2018-10-25T11:37:01.471Z",stars:15,score:.5510935594893975,quality:.6133356569668985,popularity:.06125194127832316,maintenance:.9875848084340424,slug:"/package/re-sync"}},{node:{type:"published",id:"reason-future",name:"reason-future",version:"2.3.1",category:"library",flags:[],platforms:["browser","node"],description:"A Js.Promise alternative for ReasonML.",keywords:["async"],license:"MIT",updated:"2018-10-24T00:28:36.005Z",stars:77,score:.6851581797372481,quality:.9694804714694796,popularity:.12673017698656866,maintenance:.999881361003158,slug:"/package/reason-future"}},{node:{type:"published",id:"reason-nact",name:"reason-nact",version:"5.0.0",category:"binding",flags:[],platforms:["node"],description:"let reason-nact = (node.js, reason, actors) ⇒ your µ services have never been so typed",keywords:["async"],license:"Apache-2.0",updated:"2018-10-24T05:56:47.097Z",stars:90,score:.6632624978594389,quality:.9596486823009441,popularity:.07250815917661876,maintenance:.9999715355923976,slug:"/package/reason-nact"}},{node:{type:"published",id:"reason_async",name:"reason_async",version:"0.2.1",category:"library",flags:["neglected"],platforms:["any"],description:"[Clone the example repo](https://github.com/jaredly/reason_async_example) to get started quickly.",keywords:["async","ppx"],license:"ISC",updated:"2018-10-11T15:50:29.352Z",stars:null,score:.2760806894328458,quality:.6229596085831438,popularity:.004636154499499482,maintenance:.2502004365230796,slug:"/package/reason_async"}},{node:{type:"published",id:"bs-promise-monad",name:"bs-promise-monad",version:"0.2.9",category:"library",flags:[],platforms:["browser","node"],description:"A monadic syntax to work with Promise.",keywords:["async","utilities"],license:"MIT",updated:"2018-10-12T12:15:59.717Z",stars:11,score:.48895355062014123,quality:.41803768103615346,popularity:.0397723121259065,maintenance:.9989198201863654,slug:"/package/bs-promise-monad"}}]}},pathContext:{keyword:"async"}}}});
//# sourceMappingURL=path---keyword-async-c23e3880e583182d9dca.js.map