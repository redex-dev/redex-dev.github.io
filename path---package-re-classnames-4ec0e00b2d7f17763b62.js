webpackJsonp([47852471078712],{1357:function(s,a){s.exports={data:{package:{type:"published",id:"re-classnames",name:"re-classnames",version:"5.0.1",category:"library",flags:[],platforms:["any"],description:"Reimplementation of classnames in ReasonML",keywords:["utilities"],license:"MIT",updated:"2020-07-08T13:38:21.698Z",stars:83,score:.6698517590972558,quality:.923365112325886,popularity:.12243040804634744,maintenance:.9999759502379097,readme:'<h1 id="re-classnames"><a href="#re-classnames" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>re-classnames</h1>\n<p><a href="https://www.npmjs.com/package/re-classnames"><img src="https://img.shields.io/npm/v/re-classnames.svg?style=flat-square" alt="version"></a>\n<a href="https://github.com/MinimaHQ/re-classnames/actions?query=workflow%3Abuild"><img src="https://github.com/MinimaHQ/re-classnames/workflows/build/badge.svg" alt="build"></a>\n<a href="https://www.npmjs.com/package/re-classnames"><img src="https://img.shields.io/npm/l/re-classnames.svg?style=flat-square" alt="license"></a></p>\n<p>Reimplementation of <a href="https://github.com/JedWatson/classnames">classnames</a> in <a href="https://reasonml.github.io">ReasonML</a>.</p>\n<h2 id="installation"><a href="#installation" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Installation</h2>\n<div class="redex-codeblock"><pre class="hljs lang-shell"><code><span class="hljs-comment"># yarn</span>\nyarn add re-classnames\n\n<span class="hljs-comment"># or npm</span>\nnpm install --save re-classnames</code></pre></div>\n<p>Then add it to <code>bsconfig.json</code>:</p>\n<div class="redex-codeblock"><pre class="hljs lang-json"><code><span class="hljs-string">"bs-dependencies"</span>: [\n  <span class="hljs-string">"re-classnames"</span>\n]</code></pre></div>\n<h2 id="api"><a href="#api" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>API</h2>\n<ul>\n<li><a href="#-infix-operator"><code>(+) infix operator</code></a></li>\n<li><a href="#append"><code>append</code></a></li>\n<li><a href="#fromlist"><code>fromList</code></a></li>\n<li><a href="#on"><code>on</code></a></li>\n<li><a href="#onsome"><code>onSome</code></a></li>\n<li><a href="#mapsome"><code>mapSome</code></a></li>\n<li><a href="#take"><code>take</code></a></li>\n<li><a href="#onok"><code>onOk</code></a></li>\n<li><a href="#mapok"><code>mapOk</code></a></li>\n<li><a href="#onerr"><code>onErr</code></a></li>\n<li><a href="#maperr"><code>mapErr</code></a></li>\n<li><a href="#none"><code>none</code></a></li>\n</ul>\n<h3 id="-infix-operator"><a href="#-infix-operator" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>(+) infix operator</code></h3>\n<p>The primary way to build a classname is to <code>+</code> its parts. See <a href="#how--works">FAQ</a> with details on how this syntax works.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span> + <span class="hljs-string">"three"</span>) <span class="hljs-comment">// =&gt; "one two three"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="append"><a href="#append" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>append</code></h3>\n<p>This is equivalent to <code>(+)</code> infix operator above but in the shape of a function for composability.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.append(<span class="hljs-string">"one"</span>, <span class="hljs-string">"two"</span>) <span class="hljs-comment">// =&gt; "one two"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="fromlist"><a href="#fromlist" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>fromList</code></h3>\n<p>It\'s also possible to build a classname from a list of strings. Be aware that it is slower than using <code>(+)</code> operator. See <a href="#benchmarks">Benchmarks</a>.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.fromList([<span class="hljs-string">"one"</span>, <span class="hljs-string">"two"</span>, <span class="hljs-string">"three"</span>]) <span class="hljs-comment">// =&gt; "one two three"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="on"><a href="#on" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>on</code></h3>\n<p><code>bool</code> combinator that applies classname if a value is <code>true</code>.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;on(<span class="hljs-literal">true</span>)) <span class="hljs-comment">// =&gt; "one two"</span>\n<span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;on(<span class="hljs-literal">false</span>)) <span class="hljs-comment">// =&gt; "one"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">967</span>: syntax error, consider adding a `;<span class="hljs-char">\' before</span></code></pre>\n      </div>\n    </div>\n  \n<h3 id="onsome"><a href="#onsome" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>onSome</code></h3>\n<p><code>option</code> combinator that applies classname if a value is <code>Some(_)</code>.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;onSome(<span class="hljs-type">Some</span>(<span class="hljs-string">"thing"</span>))) <span class="hljs-comment">// =&gt; "one two"</span>\n<span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;onSome(<span class="hljs-type">None</span>)) <span class="hljs-comment">// =&gt; "one"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">967</span>: syntax error, consider adding a `;<span class="hljs-char">\' before</span></code></pre>\n      </div>\n    </div>\n  \n<h3 id="mapsome"><a href="#mapsome" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>mapSome</code></h3>\n<p><code>option</code> combinator that maps <code>Some(value)</code> to the specific classname.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">type</span> t =\n  | <span class="hljs-type">One</span>\n  | <span class="hljs-type">Two</span>\n  | <span class="hljs-type">Tree</span>;\n\n<span class="hljs-type">Cn</span>.(\n  <span class="hljs-string">"one"</span>\n  + mapSome(\n      <span class="hljs-type">Some</span>(<span class="hljs-type">Two</span>),\n      <span class="hljs-func"><span class="hljs-keyword">fun</span><span class="hljs-params">\n<span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> |<span class="hljs-params"> One<span class="hljs-params"> </span></span></span></span></span></span></span></span></span></span>=&gt; <span class="hljs-string">"one"</span>\n      | <span class="hljs-type">Two</span> =&gt; <span class="hljs-string">"two"</span>\n      | <span class="hljs-type">Tree</span> =&gt; <span class="hljs-string">"three"</span>,\n    )\n) <span class="hljs-comment">// =&gt; "one two"</span>\n\n<span class="hljs-type">Cn</span>.(\n  <span class="hljs-string">"one"</span>,\n  + mapSome(\n      <span class="hljs-type">None</span>,\n      <span class="hljs-func"><span class="hljs-keyword">fun</span><span class="hljs-params">\n<span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> |<span class="hljs-params"> One<span class="hljs-params"> </span></span></span></span></span></span></span></span></span></span>=&gt; <span class="hljs-string">"one"</span>\n      | <span class="hljs-type">Two</span> =&gt; <span class="hljs-string">"two"</span>\n      | <span class="hljs-type">Tree</span> =&gt; <span class="hljs-string">"three"</span>,\n    )\n) <span class="hljs-comment">// =&gt; "one"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<p>Uncurried version:</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> mapSomeU: (option(\'a), (. \'a) =&gt; string) =&gt; string;</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">958</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="take"><a href="#take" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>take</code></h3>\n<p><code>option</code> combinator that takes <code>value</code> out of <code>Some(value)</code> and applies it as a classname.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-type">Some</span>(<span class="hljs-string">"two"</span>)-&gt;take) <span class="hljs-comment">// =&gt; "one two"</span>\n<span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-type">None</span>-&gt;take) <span class="hljs-comment">// =&gt; "one"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">967</span>: syntax error, consider adding a `;<span class="hljs-char">\' before</span></code></pre>\n      </div>\n    </div>\n  \n<h3 id="onok"><a href="#onok" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>onOk</code></h3>\n<p><code>result</code> combinator that applies classname if a value is <code>Ok(_)</code>.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;onOk(<span class="hljs-type">Ok</span>(<span class="hljs-string">"ok"</span>))) <span class="hljs-comment">// =&gt; "one two"</span>\n<span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;onOk(<span class="hljs-type">Error</span>(<span class="hljs-string">"err"</span>))) <span class="hljs-comment">// =&gt; "one"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">967</span>: syntax error, consider adding a `;<span class="hljs-char">\' before</span></code></pre>\n      </div>\n    </div>\n  \n<h3 id="mapok"><a href="#mapok" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>mapOk</code></h3>\n<p><code>result</code> combinator that maps <code>Ok(value)</code> to the specific classname.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">type</span> t =\n  | <span class="hljs-type">One</span>\n  | <span class="hljs-type">Two</span>\n  | <span class="hljs-type">Tree</span>;\n\n<span class="hljs-type">Cn</span>.(\n  <span class="hljs-string">"one"</span>\n  + mapOk(\n      <span class="hljs-type">Ok</span>(<span class="hljs-type">Two</span>),\n      <span class="hljs-func"><span class="hljs-keyword">fun</span><span class="hljs-params">\n<span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> |<span class="hljs-params"> One<span class="hljs-params"> </span></span></span></span></span></span></span></span></span></span>=&gt; <span class="hljs-string">"one"</span>\n      | <span class="hljs-type">Two</span> =&gt; <span class="hljs-string">"two"</span>\n      | <span class="hljs-type">Tree</span> =&gt; <span class="hljs-string">"three"</span>,\n    )\n) <span class="hljs-comment">// =&gt; "one two"</span>\n\n<span class="hljs-type">Cn</span>.(\n  <span class="hljs-string">"one"</span>,\n  + mapOk(\n      <span class="hljs-type">Error</span>(),\n      <span class="hljs-func"><span class="hljs-keyword">fun</span><span class="hljs-params">\n<span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> |<span class="hljs-params"> One<span class="hljs-params"> </span></span></span></span></span></span></span></span></span></span>=&gt; <span class="hljs-string">"one"</span>\n      | <span class="hljs-type">Two</span> =&gt; <span class="hljs-string">"two"</span>\n      | <span class="hljs-type">Tree</span> =&gt; <span class="hljs-string">"three"</span>,\n    )\n) <span class="hljs-comment">// =&gt; "one"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<p>Uncurried version:</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> mapOkU: (result(\'a, \'b), (. \'a) =&gt; string) =&gt; string;</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">958</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="onerr"><a href="#onerr" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>onErr</code></h3>\n<p><code>result</code> combinator that applies classname if a value is <code>Error(_)</code>.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;onErr(<span class="hljs-type">Ok</span>(<span class="hljs-string">"ok"</span>))) <span class="hljs-comment">// =&gt; "one"</span>\n<span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>-&gt;onErr(<span class="hljs-type">Error</span>(<span class="hljs-string">"err"</span>))) <span class="hljs-comment">// =&gt; "one two"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">967</span>: syntax error, consider adding a `;<span class="hljs-char">\' before</span></code></pre>\n      </div>\n    </div>\n  \n<h3 id="maperr"><a href="#maperr" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>mapErr</code></h3>\n<p><code>result</code> combinator that maps <code>Error(value)</code> to the specific classname.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">type</span> t =\n  | <span class="hljs-type">One</span>\n  | <span class="hljs-type">Two</span>\n  | <span class="hljs-type">Tree</span>;\n\n<span class="hljs-type">Cn</span>.(\n  <span class="hljs-string">"one"</span>\n  + mapErr(\n      <span class="hljs-type">Ok</span>(<span class="hljs-type">Two</span>),\n      <span class="hljs-func"><span class="hljs-keyword">fun</span><span class="hljs-params">\n<span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> |<span class="hljs-params"> One<span class="hljs-params"> </span></span></span></span></span></span></span></span></span></span>=&gt; <span class="hljs-string">"one"</span>\n      | <span class="hljs-type">Two</span> =&gt; <span class="hljs-string">"two"</span>\n      | <span class="hljs-type">Tree</span> =&gt; <span class="hljs-string">"three"</span>,\n    )\n) <span class="hljs-comment">// =&gt; "one"</span>\n\n<span class="hljs-type">Cn</span>.(\n  <span class="hljs-string">"one"</span>,\n  + mapErr(\n      <span class="hljs-type">Error</span>(),\n      <span class="hljs-func"><span class="hljs-keyword">fun</span><span class="hljs-params">\n<span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> <span class="hljs-params"> |<span class="hljs-params"> One<span class="hljs-params"> </span></span></span></span></span></span></span></span></span></span>=&gt; <span class="hljs-string">"one"</span>\n      | <span class="hljs-type">Two</span> =&gt; <span class="hljs-string">"two"</span>\n      | <span class="hljs-type">Tree</span> =&gt; <span class="hljs-string">"three"</span>,\n    )\n) <span class="hljs-comment">// =&gt; "one two"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<p>Uncurried version:</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> mapErrU: (result(\'a, \'b), (. \'b) =&gt; string) =&gt; string;</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">958</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="none"><a href="#none" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a><code>none</code></h3>\n<p>An alias of an empty string <code>""</code>. It supposed to be used to express the absence of a classname in a more explicit manner.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(\n  <span class="hljs-keyword">switch</span> (x) {\n  | <span class="hljs-type">Loading</span> =&gt; <span class="hljs-type">Css</span>.loading\n  | <span class="hljs-type">Loaded</span> =&gt; <span class="hljs-string">""</span>\n  }\n);\n\n<span class="hljs-comment">// vs</span>\n\n<span class="hljs-type">Cn</span>.(\n  <span class="hljs-keyword">switch</span> (x) {\n  | <span class="hljs-type">Loading</span> =&gt; <span class="hljs-type">Css</span>.loading\n  | <span class="hljs-type">Loaded</span> =&gt; <span class="hljs-keyword">none</span>\n  }\n);</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2553</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h2 id="benchmarks"><a href="#benchmarks" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Benchmarks</h2>\n<div class="redex-codeblock"><pre class="hljs lang-none"><code>Cn.(+) x 3,781,425 ops/sec ±0.56% (90 runs sampled)\nCn.fromList x 1,545,656 ops/sec ±0.61% (93 runs sampled)\nclassnames.js x 926,701 ops/sec ±0.82% (89 runs sampled)</code></pre></div>\n<h2 id="faq"><a href="#faq" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>FAQ</h2>\n<h3 id="how--works"><a href="#how--works" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>How (+) works</h3>\n<p>In Reason, you can define your own infix operators.</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-number">1</span> + <span class="hljs-number">1</span> <span class="hljs-comment">// =&gt; 2</span>\n<span class="hljs-string">"1"</span> ++ <span class="hljs-string">"1"</span> <span class="hljs-comment">// =&gt; "11"</span>\n<span class="hljs-string">"1"</span> + <span class="hljs-string">"1"</span> <span class="hljs-comment">// =&gt; error, `+` is for ints</span>\n\n<span class="hljs-keyword">let</span> (+) = (x1, x2) =&gt; x1 ++ x2;\n<span class="hljs-string">"1"</span> + <span class="hljs-string">"1"</span> <span class="hljs-comment">// =&gt; "11"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">1471</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<p><code>Cn.(+)</code> is an infix operator that takes 2 strings and combines them into a valid classname:</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> + <span class="hljs-string">"two"</span>) <span class="hljs-comment">// =&gt; "one two"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<p>What about <code>Cn.()</code> part? Since <code>(+)</code> operator is defined inside <code>Cn</code> module, to apply it, you need to bring it into the scope. You can do so by <a href="https://reasonml.github.io/docs/en/module#open-ing-a-module">locally open</a> <code>Cn</code> module:</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(\n  <span class="hljs-comment">// everything from Cn module is now available here,</span>\n  <span class="hljs-comment">// including (+) operator, combinators etc.</span>\n)</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">708</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="warning-44"><a href="#warning-44" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Warning 44</h3>\n<p>In the default BuckleScript configuration, you might see a warning <code>44</code> when using <code>(+)</code> operator. For some reason, BuckleScript enables this warning by default, although it is disabled in the modern OCaml.</p>\n<p>What does it mean? Since <code>(+)</code> operator is available globally as infix operator for summing ints, opening <code>Cn</code> module would shadow it by its own <code>(+)</code> operator.</p>\n<p>There are 2 ways to handle this.\n1. Disable warning <code>44</code> via <code>bsconfig.json</code>:</p>\n<div class="redex-codeblock"><pre class="hljs lang-json"><code><span class="hljs-string">"warnings"</span>: {\n  <span class="hljs-string">"number"</span>: <span class="hljs-string">"-44"</span>\n}</code></pre></div>\n<ol start="2">\n<li>Use alternative infix operator, provided by <code>Cn</code>:</li>\n</ol>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-type">Cn</span>.(<span class="hljs-string">"one"</span> &lt;:&gt; <span class="hljs-string">"two"</span> &lt;:&gt; <span class="hljs-string">"three"</span>) <span class="hljs-comment">// =&gt; "one two three"</span></code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">2282</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<h3 id="uncurried-versions"><a href="#uncurried-versions" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>Uncurried versions</h3>\n<p>All <code>map*</code> functions have <a href="https://bucklescript.github.io/docs/en/function#solution-guaranteed-uncurrying">uncurried versions</a>:</p>\n\n    <div class="redex-codeblock m-tabbed">\n      <ul>\n        <li class="reason s-selected"> RE\n        <li class="ml"> ML\n      </ul>\n      <div class="codeblock reason s-selected">\n        <pre class="hljs lang-reason"><code><span class="hljs-keyword">let</span> mapSomeU: (option(\'a), (. \'a) =&gt; string) =&gt; string;\n\n<span class="hljs-type">Cn</span>.mapSomeU(\n  <span class="hljs-type">Some</span>(<span class="hljs-type">Two</span>),\n  (. x) =&gt;\n    <span class="hljs-keyword">switch</span> (x) {\n    | <span class="hljs-type">One</span> =&gt; <span class="hljs-string">"one"</span>\n    | <span class="hljs-type">Two</span> =&gt; <span class="hljs-string">"two"</span>\n    | <span class="hljs-type">Tree</span> =&gt; <span class="hljs-string">"three"</span>\n    },\n)</code></pre>\n      </div>\n      <div class="codeblock ml">\n        <pre class="hljs lang-ml"><code><span class="hljs-number">958</span>: &lt;<span class="hljs-type">UNKNOWN</span> <span class="hljs-type">SYNTAX</span> <span class="hljs-type">ERROR</span>&gt;</code></pre>\n      </div>\n    </div>\n  \n<p>It might gain a tiny bit of performance but in the majority of the cases, it wouldn\'t be noticeable.</p>\n<h2 id="license"><a href="#license" aria-hidden="true" class="anchor"><svg aria-hidden="true" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg></a>License</h2>\n<p>See <a href="./LICENSE">LICENSE</a>.</p>\n',
homepageUrl:"https://github.com/MinimaHQ/re-classnames#readme",repositoryUrl:"https://github.com/MinimaHQ/re-classnames",npmUrl:"https://www.npmjs.com/package/re-classnames",issuesUrl:"https://github.com/MinimaHQ/re-classnames/issues",slug:"/package/re-classnames"}},pathContext:{id:"re-classnames"}}}});
//# sourceMappingURL=path---package-re-classnames-4ec0e00b2d7f17763b62.js.map